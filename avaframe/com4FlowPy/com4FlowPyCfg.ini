### Config File - This file contains the main settings for the com4FlowPy run
## Set your parameters
# This file will be overridden by local_com4FlowPyCfg.ini if it exists
# So copy this file to local_com4FlowPyCfg.ini, adjust your variables there

# Optional settings-------------------------------
[GENERAL]
#++++++++++++ Flow-Py Model Parameters
# alpha:
# Angle-of-reach Alpha [°] - defines max. longitudinal runout limit
# equivalent to a Coulomb-friction of tan(alpha) in a sliding block model
#---------------------
# exp:
# Spreading Coefficient (influences lateral spreading)
#---------------------
# flux_threshold:
# Flux threshold (influences lateral spreading)
#---------------------
# max_z:
# Energy-Line-Height Limit (can be interpreted as velocity limit)
# max_v = sqrt(max_z*19.62)
# typical values:
#   - Avalanche:   ~270 m ... ~72 m/s
#   - Rockfall:    ~130 m ... ~50 m/s
#   - Debris-flow:  ~12 m ... ~15 m/s
#---------------------

alpha = 25
exp = 8
flux_threshold = 3.0e-4
max_z = 8848

#++++++++++++ Use Infrastructure

infra = False

#++++++++++++ Use a dynamic u_max Limit
# Requires an additional tif-file containing the uMax  (in m/s)
# or zDeltaMax (m) Limits
# in every cell where a release cell is.
# the paths for each release cells are calculated with these uMax values
# (computed to z_delta, similar to the max_z) or zDelta values.
# In varUmaxParameter the parameter (uMax in m/s or zDeltaMax in m) 
# provided is given.
variableUmaxLim = False
varUmaxParameter = uMax

#++++++++++++ Use a dynamic alpha angle
# Requires an additional tif-file containing the alpha angles
# in every cell where a release cell is.
# The paths for each release cells are calculated with these alpha angles
variableAlpha = False

#++++++++++++ Use a dynamic exponent
# Requires an additional tif-file containing the exponents
# in every cell where a release cell is.
# The paths for each release cells are calculated with these exponent
variableExponent = False

#++++++++++++ Use Forest Information
# NOTE AH 20240408: Dummy settings for Forest Interaction
# The forest implementation should mimick/reproduce the
# one from the "foreste_detrainment" branch in the avaframe/FlowPy repo
# which is partly described in D'Amboise et al. (2021)
#
# Forest-Interaction is only used if 'forest' is set to 'True'
#++++++++++++
forest = False

#++++++++++++
# Type of Forest-Interaction Model to use (only works in conjunction with forest = True!)
# valid choices:
#
#     * 'forestFriction' (D'Amboise et al., 2021) - use added friction on forest Pixels
#            forest-Raster (set in 'forestPath') is assumed to have values between
#            0 (no Forest) and 1 (full protective function).
#        model behavior is governed by 'maxAddedFrictionFor', 'minAddedFrictionFor'
#        and 'velThForFriction'
#
#     * 'forestDetrainment' (D'Amboise et al., 2022?) - added friction and detrainment on forested Pixels
#            forest-Raster (set in 'forestPath') is assumed to have values between
#            0 (no Forest) and 1 (full protective function).
#        model behavior is governed by 'maxAddedFrictionFor', 'minAddedFrictionFor'
#        and 'velThForFriction', 'maxDetrainmentFor', 'minDetrainmentFor', 'velThForDetrain'
#
#     * 'forestFrictionLayer' - provide Layer with local alpha / local delta-Alpha on forested pixels / for all pixels in
#        the domain
#            forest-Raster (set in 'forestPath') is assumed to have values between 0° (no friction) and 90° (inf. friciton)
#        forest-Raster is either interpreted as 'absolute' or 'difference'
#            'absolute'   - absolute 'alpha' values are used on forested pixels (all pixels with values > 0)
#            'relative' - 'alpha' values are interpreted as additional friction on forested pixels (all pixels with
#                          values > 0)
#++++++++++++

# ['forestFriction', 'forestDetrainment', 'forestFrictionLayer']
forestModule = forestFriction
# ForestInteraction gives an additional output layer for the amount of forested cells
# a path ran through 
# (now implemented, only when forest = True) -> TODO: we dont require a forestModule to compute
# for ForestInteraction Layer, but we need to read in the Forest - Layer (requires forest = True)
forestInteraction = False

#++++++++++++ Forest added Friction
# These are the parameters for the "add friction on forested cells"-approach
# described in D'Amboise et al. (2021)
#
# maxAddedFrictionFor [°]: maximum increase of Alpha angle/basal friction on forested cells
# minAddedFrictionFor [°]: minimum increase of Alpha angle/basal friction on forested cells
# velThForFriction [m/s]: velocity threshold for forest-friction effect
#++++++++++++

maxAddedFrictionFor = 10
minAddedFrictionFor = 2
velThForFriction    = 30

#++++++++++++ Forest Detrainment
# These are the parameters for the "forestDetrainment"-approach - D'Amboise et al. (2022??)
# The idea is to remove 'virtual mass' (aka 'flux' in Flow-Py) from the modeled flow/process
# on forested pixels in dependency of FSI and local z_delta
#
# maxDetrainmentFor [°]: default set to '0' (i.e. no detrainment) - foreste_detrainment val:
# minDetrainmentFor [°]: default set to '0' (i.e. no detrainment) - foreste_detrainment val:
# velThForDetrain [m/s]: velocity threshold for forest-detraiment effect # default set to '0' (i.e. no detrainment) - foreste_detrainment val:
#++++++++++++

maxDetrainmentFor = 0
minDetrainmentFor = 0
velThForDetrain   = 0

#++++++++++++ ForestFrictionLayer
# maxDetrainmentFor [°]: default set to '0' (i.e. no detrainment) - foreste_detrainment val:
# minDetrainmentFor [°]: default set to '0' (i.e. no detrainment) - foreste_detrainment val:
# velThForDetrain [m/s]: velocity threshold for forest-detraiment effect # default set to '0' (i.e. no detrainment) - foreste_detrainment val:
#++++++++++++

# ['absolute', 'relative']
forestFrictionLayerType = absolute

# ['1 cell', '2 cells']
# if value == 1 forest effect is not considered at the start cell (default behaviour)
# if value == 2 also first cell after start cell has no forest effect
# background --> for some processes (e.g.) rockfall it might make sense, if a first
# acceleration phase is allowed before accounting for forest effects
# NOTE: this currently only works with 'forestFrictionLayer' module!!
skipForestCells = 1 

#++++++++++++ Parameters for Tiling
# tileSize: size of tiles in x and y direction in meters (if total size of) x
#           or y of input DEM is larger than tileSize, then the input raster
#           layers are tiles
# tileOverlap: overlap between single tiles in m (5 km is rather conservative)
#---------------------------------------

tileSize = 15000
tileOverlap = 5000

#++++++++++++ Parameters for CPU usage/multiprocessing
# Recommended to leave at default values unless performance has to be
# tweaked/optimized (e.g. for application on dedicated machines, maxing out
# computational resources)
#
# procPerCPUCore: number of processer per core for multiprocessing
#                default value = 1 (it is recommended not to change this value
#                unless you want to max. out CPUs, which might come at the cost
#                of RAM comsumption!!!)
# chunkSize: tbd.
# maxChunks: Maximum number of single tasks for multiprocessing, if set too high
#           this can max out RAM and lead to unexpected behavior (in this case
#           probably an infinite loop --> you see it in the .log if this happens)
#           On machines with a lot of CPUs and RAM this value might be set higher ...
#++++++++++++
procPerCPUCore = 1
chunkSize = 50
maxChunks = 500

# Optional Custom Paths
[PATHS]

# define format of output raster files (default = .tif)
# available options: [.tif, .asc]
# if you plan to utilize avaFrame tools to analyse result rasters
# then you should choose '.asc' here!
outputFileFormat = .tif

# define the different output files that are written to disk
# default = 'zDelta|cellCounts|travelLength|fpTravelAngle'
# additional options: 
#                    slTravelAngle
#                    flux
#                    zDeltaSum
# if forestInteraction: forestInteraction is automatically added to outputs
# if infra: backCalculation is automatically  added to output
outputFiles = zDelta|cellCounts|travelLength|fpTravelAngle

#++++++++++++ Custom paths True/False
# default: False
# if set to 'False':
#    the default AvaFrame Path/Directory structure is used
#    i.e. the Work- and Result-Folders and inputFiles are taken from cfgMain and
#    Input-Files are expected in AvaFrame directory structure
# if set to 'True':
#    workDir, demPath, releasePath and [infraPath <-> if 'infra'==True]
#    can be set here
#
#++++++++++++
useCustomPaths = False
# for now only works with 'useCustomPaths=True'; if 'True' the temp folder is
# deleted after the output-files have been successfully written to disk
deleteTempFolder = False

# if 'useCustomPaths = True', then these input and output paths are used
# the output Folder is automatically placed inside the 'workDir'
workDir =
demPath =
releasePath =
infraPath =
forestPath =
varUmaxPath = 
varAlphaPath = 
varExponentPath = 

# plot save results flags------------------------
# NOTE-TODO: These Flags still don't do anything,
#            would be cool to have full integration for
#            com4FlowPy with avaframe post-processing utils ...
[FLAGS]
# Plot the avalanche path and DEM figure
plotPath = False

# Plot the avalanche profile with alpha beta points
plotProfile = False

# Save the profile figure
saveProfile = True

# Write results to txt file
writeRes = True

# keep intermediate results
fullOut = False

#----------------------------------------------------------