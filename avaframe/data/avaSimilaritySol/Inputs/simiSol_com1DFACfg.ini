### Config File - This file contains the main settings for the similarity
### solution run with com1DFAPy


[GENERAL]
#+++++++++++++ Output++++++++++++
# desired result Parameters (ppr, pfd, pfv, FD, FV, P, particles) - separated by |
resType = FD|FV|Vx|Vy|Vz
# saving time step, i.e.  time in seconds (first and last time step are always saved)
# option 1: give an interval with start:interval in seconds (tStep = 0:5 - this will save desired results every 5 seconds for the full simulation)
# option 2: explicitly list all desired time steps (closest to actual computational time step) separated by | (example tSteps = 1|50.2|100)
# NOTE: initial and last time step are always saved!
tSteps = 0:1

#++++++++++++++++ particle Initialisation +++++++++
# initial particle distribution, options: random, semirandom, uniform
# semirandom: particles are uniformly distributed with a little random variation
initPartDistType = random

#+++++++++SNOW properties
# True if release thickness should be read from shapefile file; if False - relTh read from ini file
relThFromShp = False
relThFromFile = True

#++++++++++++Time stepping parameters
# End time [s]
tEnd = 5
# to use a variable time step (time step depends on kernel radius)
sphKernelRadiusTimeStepping = True
# courant number
cMax = 0.02

#+++++++++++++SPH parameters
# SPH gradient option
# 0) No pressure gradients computed
# 1) SamosAT style (no reprojecion on the surface, dz = 0 and gz is used)
# 2) SamostAt but done in the cartesian coord system (will hopefully allow us to add the earth pressure coef)
# 3) SamostAt but done in the local coord system (will hopefully allow us to add the earth pressure coef)
# and this time reprojecion on the surface, dz not 0 and g3 is used
sphOption = 2
# sph kernel smoothing length [m]
sphKernelRadius = 3
# Choice of artificial viscosity
# 0) No artificial viscosity
# 1) SAMOS artificial viscosity
# 2) Ata artificial viscosity
viscOption = 1

#++++++++++++++++ Particles
# number of particles defined by: MPPDIR= mass per particle direct, MPPDH= mass per particles through release thickness,
# MPPKR= mass per particles through number of particles per kernel radius
massPerParticleDeterminationMethod = MPPKR
# number of particles per kernel radius (if MPPKR is used)
# is computed with: nPPK = nPPK0 * (sphKR/sphKR0)^aPPK
# where sphKR is the sphKernelRadius specified further up
# reference kernel radius
sphKR0 = 5
# reference number of particles per kernel radius
nPPK0 = 10|20|30
# variation of nppK exponent
aPPK = -0.5|-1|-1.5|-2

# if splitOption=0
# threshold for splitting particles, split if: mPart > massPerPart x thresholdMassSplit
thresholdMassSplit = 5


#+++++++++++++Mesh and interpolation
# remesh the input DEM
# expected mesh size [m]
meshCellSize = 3

#+++++++++++++Flow model parameters+++++++++
# subgridMixingFactor
subgridMixingFactor = 10

#++++++++++++Friction model
# friction type (samosAT, Coulomb)
frictModel = Coulomb
# add the friction using an explicit formulation (1)
# 0 use an implicit method
explicitFriction = 1
#+++++++++++++SamosAt friction model
mu = 0.466307658

[SIMISOL]
# dimensioning parameters
L_x = 80.
L_y = 80.

# release thickness
relTh = 4.

# bed friction angle
bedFrictionAngle = 25.
# internal friction angle
internalFrictionAngle = 25.
# plane inclination angle
planeinclinationAngle = 35.

# Flag earthpressure coefficients
# if false takes 1
flagEarth = False

# save analysis plots at time step dtSol
dtSol = 50.

# which time step should be saved
tSave = 5

#++++Plotting parameters++++++
# list of parameters to display in the summary plot (list of parameters separated by |)
paramInfo = sphKernelRadius|aPPK|nPPK0|nPart
# plotting flags
# only analyze and plot the tSave time step
onlyLast = False
# plot error function of time for each simulation
plotErrorTime = False
# plot individual figure for the h, hu and u error for each saved time step
plotSequence = False
# use relative difference
relativError = True
# when plotting, the domain extent is scaleCoef times bigger than the data extent
scaleCoef = 1.02
