### Config File - This file contains the main settings for the simulation run
## Copy to  local_com1DFACfg.ini and set you parameters
# This file is part of Avaframe.


[GENERAL]
#++++++++++++++++ Simulation type
# list of simulations that shall be performed (null, ent, res, entres, available (use all available input data))
simTypeList = available
# model type - only for file naming (dfa - dense flow avalanche)
modelType = dfa

#+++++++++++++ Output++++++++++++
# desired result Parameters (ppr, pfd, pfv, FD, FV, P, particles) - separated by |
resType = ppr|pfd|pfv
# saving time step, i.e.  time in seconds (first and last time step are always saved)
# option 1: give an interval with start:interval in seconds (tStep = 0:5 - this will save desired results every 5 seconds for the full simulation)
# option 2: explicitly list all desired time steps (closest to actual computational time step) separated by | (example tSteps = 1|50.2|100)
# NOTE: initial and last time step are always saved!
tSteps = 1

#++++++++++++++++ particle Initialisation +++++++++
# initial particle distribution, options: random, semirandom, uniform
# semirandom: particles are uniformly distributed with a little random variation
initPartDistType = random
# if true use file (import particles initial distribution from file)
initialiseParticlesFromFile = False
particleFile =
# seed for random generator
seed = 12345

#+++++++++SNOW properties
# density of snow [kg/m³]
rho = 200
# density of entrained snow [kg/m³]
rhoEnt = 100
# True if release thickness should be read from ini file and NOT from shapefile
useRelThFromIni = False
# release thickness
relTh = 1.
# Add secondary release area
secRelArea = False
# secondary area release thickness
secondaryRelTh = 0.5


#++++++++++++Time stepping parameters
# fixed time step [s] (also used as first time step when using CFL)
dt = 0.1
# End time [s]
tEnd = 400
# to use a variable time step (defined by the CFL number)
cflTimeStepping = False
# courant number
cMax = 0.5
# number of iterations with constant time step set to dt at the beginning
cflIterConstant = 5
# to constrain the lower margin of the allowed time step
constrainCFL = False
# max time step in case of small velocities
maxdT = 0.5
# min time step in case of high velocity
mindT = 0.01
# stopCriterion (based on massFlowing or kinEnergy)
stopCritType = kinEnergy
# if based on massFlowing, specify the velocity threshold for flowing mass (m/s)
uFlowingThreshold = 0.01
# stopCriterion (stops when massFlowing<0.01*peakMassFlowing or ke<0.01*pke)
stopCrit = 0.01

#+++++++++++++SPH parameters
# SPH gradient option
# 0) No pressure gradients computed
# 1) SamosAT style (no reprojecion on the surface, dz = 0 and gz is used)
# 2) SamostAt but done in the local coord system (will hopefully allow us to add the earth pressure coef)
# and this time reprojecion on the surface, dz not 0 and g3 is used
# 3) same as 2) but correcting the gradient to get constant exact gradients
# 4) same as 2) but correcting the gradient to get linear exact gradients
sphOption = 1
# minimum SPH distance [m]
minRKern = 0.001
# sph kernel smoothing length [m]
sphKernelRadius = 5
# number of particles defined by: MPPDIR= mass per particle direct, MPPDH= mass per particles through release thickness
massPerParticleDeterminationMethod = MPPDH
# mass per particle [kg]
massPerPart = 1250
# release thickness per particle
deltaTh = 0.25


#+++++++++++++Mesh and interpolation
# interpolation option
# 3 Options available : -0: nearest neighbour interpolation
#                       -1: equal weights interpolation
#                       -2: bilinear interpolation
interpOption = 2
# minimum flow depth [m]
hmin = 0.05
# remesh the input DEM
# expected mesh size [m]
meshCellSize = 5
# threshold under which no remeshing is done
meshCellSizeThreshold = 0.001

# Normal computation on rectangular grid
# 4 triangles method        6 triangles method         8 triangles method
# +----U----UR---+---+--... +----+----+----+---+--... +----+----+----+---+--...
# |   /|\   |   /|          |   /| 2 /|   /|          |\ 2 | 3 /|   /|           Y
# |  / | \  |  / |          |  / |  / |  / |          | \  |  / |  / |           ^
# | /  |  \ | /  | /        | /  | /  | /  | /        |  \ | /  | /  | /         |
# |/ 1 | 2 \|/   |/         |/ 1 |/ 3 |/   |/         | 1 \|/ 4 |/   |/          |
# +----P----L----+---+--... +----*----+----+---+--... +----*----+----+----+--... +-----> X
# |\ 4 | 3 /|   /|          | 6 /| 4 /|   /|          | 8 /|\ 5 |   /|
# | \  |  / |  / |          |  / |  / |  / |          |  / | \  |  / |
# |  \ | /  | /  | /        | /  | /  | /  | /        | /  |  \ | /  | /
# |   \|/   |/   |/         |/ 5 |/   |/   |/         |/ 7 | 6 \|/   |/
# +----+----+----+---+--... +----+----+----+---+--... +----+----+----+---+--...
# |   /|   /|   /|          |   /|   /|   /|          |   /|   /|   /|
# 4 Options available : -1: simple cross product method (with the diagonals P-UR and U-L)
#                       -4: 4 triangles method
#                       -6: 6 triangles method
#                       -8: 8 triangles method
methodMeshNormal = 1

#+++++++++++++ Particle reprojection
# conserve distance during reprojection
# 1 if the distance conservation method should be used
# otherwise orthogonal reprojection is used
distReproj = 0
# maximum number of iterations (for both methods)
reprojectionIterations = 5
# if distReproj = 1, specify the stop criterion : stops when error<thresholdProjection*distance
thresholdProjection = 0.001


#+++++++++++++Flow model parameters+++++++++
# subgridMixingFactor
subgridMixingFactor = 100.
# acceleration of gravity [m/s²]
gravAcc = 9.81
velMagMin = 1.0e-6
depMin = 1.0e-6
# curvature acceleration coefficient
# take curvature term into account in the gravity acceleration term
# 0 if deactivated, 1 if activated
curvAcceleration = 1

#++++++++++++Friction model
# add the friction using an explicit formulation (1)
# 0 use an implicit method
explicitFriction = 0
# friction type (samosAT, Coulomb, Voellmy)
frictModel = samosAT
#+++++++++++++General Friction parameters
# tan of bed friction angle used for: samosAT, Coulomb, Voellmy
mu = 0.15500
#+++++++++++++SamosAt friction model
Rs0 = 0.222
kappa = 0.43
R = 0.05
B = 4.13
#+++++++++++++Voellmy friction model
xsi = 4000.

#++++++++++++ Resistance force parameters
# height of the obstacles
hRes = 10
# resistance coeff
cw = 0.5
# diameter of obstacles
dRes = 0.3
# spacing between obstacles
sres = 5
#++++++++++++ Entrainment Erosion Energy
# use entrainment thickness (entTh) from ini file, if False read from shape file
useEntThFromIni = False
# entrainment thickness - set useEntThFromFile to True otherwise entTh is read from shp file
entTh = 0.3
entEroEnergy = 5000
entShearResistance = 0
entDefResistance = 0

#++++++++++++++ Technical values +++++++++++++
# when checking if a point is within a polygon, one can decide to add a buffer
# arround the polygon (0 means take strictly the points inside, a very small value
# will inclune the points located on the polygon line)
thresholdPointInPoly = 0.001

[TRACKPARTICLES]
# if particles should be tracked - don't forget to specify the "tSteps" you want to
# save further up (for example tStep = 0:1 will lead to tracking patiles every 1 second)
trackParticles = False
# centerTrackPartPoint of the location of the particles to track (x|y coordinates)
centerTrackPartPoint = 2933|-4010
# radius around centerTrackPartPoint (in meters)
radius = 5
# particle properties to be tracked (the following properties are always
# tracked: x, y, z, ux, uy, uz, but more can be added in particleProperties)
particleProperties =

[VISUALISATION]
# if particle properties shall be exported to csv files - requires to save particles in OUTPUTS
writePartToCSV = False
# particle properties to be saved to csv (options: ux, uy, uz, velocityMagnitude,..)
particleProperties = velocityMagnitude|m


[FLAGS]
# True if dev release areas
flagDev = False
# specify a particular release area scenario, provide name of shapefile with or without extension .shp (optional)
releaseScenario =


[REPORT]
# which result parameters shall be included as plots in report,  - separated by |
plotFields = ppr|pfd|pfv
# units for output variables
unitppr = kPa
unitpfd = m
unitpfv = ms-1
