### Config File - This file is used as configuration file for running com1DFA
## It replaces the local_com1DFACfg.ini

[GENERAL]
#++++++++++++++++ Simulation type
# list of simulations that shall be performed (null, ent, res, entres, available (use all available input data))
simTypeList = null

#+++++++++++++ Output++++++++++++
# desired result Parameters (ppr, pft, pfv, pta, FT, FV, P, Vx, Vy, Vz, TA, particles) - separated by |
resType = particles
# saving time step, i.e.  time in seconds (first and last time step are always saved)
# option 1: give an interval with start:interval in seconds (tStep = 0:5 - this will save desired results every 5 seconds for the full simulation)
# option 2: explicitly list all desired time steps (closest to actual computational time step) separated by | (example tSteps = 1|50.2|100)
# NOTE: initial and last time step are always saved!
tSteps = 0:5

#+++++Release thickness++++
# True if release thickness should be read from shapefile file; if False - relTh read from ini file
relThFromShp = False
# release thickness (only considered if relThFromShp=False)
relTh = 1
#+++++Entrainment thickness++++
# True if entrainment thickness should be read from shapefile file; if False - entTh read from ini file
entThFromShp = True
# entrainment thickness (only considered if entThFromShp=False)
entTh =

#++++++++++++Time stepping parameters
# End time [s]
tEnd = 400
# to use a variable time step (time step depends on kernel radius)
sphKernelRadiusTimeStepping = True
# courant number if option cflTimeStepping is chosen.
# Upper time step limit coefficient if option sphKernelRadiusTimeStepping is chosen.
cMax = 0.02
# stopCriterion (based on massFlowing or kinEnergy)
stopCritType = massFlowing
# if based on massFlowing, specify the velocity threshold for flowing mass (m/s)
uFlowingThreshold = 0.0
# stopCriterion (stops when massFlowing<0.01*peakMassFlowing or ke<0.01*pke)
stopCrit = 0.01

#+++++++++++++SPH parameters
# SPH gradient option
# 0) No pressure gradients computed
# 1) SamosAT style (no reprojecion on the surface, dz = 0 and gz is used)
# 2) SamosAT done in the cartesian coord system (reprojecion on the surface, dz != 0 and g3 is used)
# 3) SamosAT but done in the local coord system (will hopefully allow us to add the earth pressure coef)
# and this time reprojecion on the surface, dz not 0 and g3 is used
sphOption = 2
# sph kernel smoothing length [m]
sphKernelRadius = 5
# Choice of artificial viscosity
# 0) No artificial viscosity
# 1) SAMOS artificial viscosity
# 2) Ata artificial viscosity
viscOption = 1

#++++++++++++++++ Particles
# number of particles defined by: MPPDIR= mass per particle direct, MPPDH= mass per particles through release thickness,
# MPPKR= mass per particles through number of particles per kernel radius
massPerParticleDeterminationMethod = MPPKR
# is computed with: nPPK = nPPK0 * (sphKR/sphKR0)^aPPK
# where sphKR is the sphKernelRadius specified further up
# reference kernel radius
sphKR0 = 5
# reference number of particles per kernel radius
nPPK0 = 15
# variation of nppK exponent
aPPK = -1.5


#+++++++++++++Mesh and interpolation
# remesh the input DEM
# expected mesh size [m]
meshCellSize = 5

#+++++++++++++Flow model parameters+++++++++
# subgridMixingFactor
subgridMixingFactor = 10.
# curvature acceleration coefficient
# take curvature term into account in the gravity acceleration term
# 0 if deactivated, 1 if activated
curvAcceleration = 0

#++++++++++++Friction model
# add the friction using an explicit formulation (1)
# 0 use an implicit method
explicitFriction = 1
# friction type (samosAT, Coulomb, Voellmy)
frictModel = Coulomb
#+++++++++++++General Friction parameters
# tan of bed friction angle used for: samosAT, Coulomb, Voellmy
mu = 0.40375846095054385

[REPORT]
# which result parameters shall be included as plots in report,  - separated by |
plotFields = ppr|pft|pfv|TA|pta
# units for output variables
unitppr = kPa
unitpft = m
unitpfv = ms-1
