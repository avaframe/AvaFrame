### Config File - This file contains the main settings for the simulation run
## Copy to  local_com1DFACfg.ini and set you parameters
# This file is part of Avaframe.


[GENERAL]
#++++++++++++++++ Simulation type
# list of simulations that shall be performed (null, ent, res, entres, available (use all available input data))
simTypeList = null
# model type - only for file naming (dfa - dense flow avalanche)
modelType = dfa

#+++++++++++++ Output++++++++++++
# desired result Parameters (ppr, pfd, pfv, pta, FD, FV, P, Vx, Vy, Vz, TA, particles) - separated by |
resType = particles
# saving time step, i.e.  time in seconds (first and last time step are always saved)
# option 1: give an interval with start:interval in seconds (tStep = 0:5 - this will save desired results every 5 seconds for the full simulation)
# option 2: explicitly list all desired time steps (closest to actual computational time step) separated by | (example tSteps = 1|50.2|100)
# NOTE: initial and last time step are always saved!
tSteps = 0:1

#++++++++++++++++ particle Initialisation +++++++++
# initial particle distribution, options: random, semirandom, uniform
# semirandom: particles are uniformly distributed with a little random variation
initPartDistType = random
# if true use file (import particles initial distribution from file)
initialiseParticlesFromFile = False
particleFile =
# seed for random generator
seed = 12345

#+++++++++SNOW properties
# density of snow [kg/m³]
rho = 200
# density of entrained snow [kg/m³]
rhoEnt = 100
#+++++Release thickness++++
# True if release thickness should be read from shapefile file; if False - relTh read from ini file
relThFromShp = False
# if a variation on relTh shall be performed add here +- percent and number of steps separated by $
# for example relThPercentVariation=50$10
relThPercentVariation =
# if a variation on relTh shall be performed add here +- absolute value and number of steps separated by $
# for example relThRangeVariation=0.5$10
relThRangeVariation =
# add standard values
addStandardConfig = False
# release thickness (only considered if relThFromShp=False)
relTh = 1

#++++++++++++Time stepping parameters
# fixed time step [s] (also used as first time step when using CFL)
dt = 0.1
# End time [s]
tEnd = 400
# to use a variable time step (time step depends on kernel radius)
sphKernelRadiusTimeStepping = True
# courant number
cMax = 0.04
# stopCriterion (based on massFlowing or kinEnergy)
stopCritType = massFlowing
# if based on massFlowing, specify the velocity threshold for flowing mass (m/s)
uFlowingThreshold = 0.0
# stopCriterion (stops when massFlowing<0.01*peakMassFlowing or ke<0.01*pke)
stopCrit = 0.0

#+++++++++++++SPH parameters
# SPH gradient option
# 0) No pressure gradients computed
# 1) SamosAT style (no reprojecion on the surface, dz = 0 and gz is used)
# 2) SamosAT done in the cartesian coord system (reprojecion on the surface, dz != 0 and g3 is used)
# 3) SamosAT but done in the local coord system (will hopefully allow us to add the earth pressure coef)
# and this time reprojecion on the surface, dz not 0 and g3 is used
sphOption = 2
# sph kernel smoothing length [m]
sphKernelRadius = 5
# Choice of artificial viscosity
# 0) No artificial viscosity
# 1) SAMOS artificial viscosity
# 2) Ata artificial viscosity
viscOption = 1

#++++++++++++++++ Particles
# number of particles defined by: MPPDIR= mass per particle direct, MPPDH= mass per particles through release thickness,
# MPPKR= mass per particles through number of particles per kernel radius
massPerParticleDeterminationMethod = MPPKR
# is computed with: nPPK = nPPK0 * (sphKR/sphKR0)^aPPK
# where sphKR is the sphKernelRadius specified further up
# reference kernel radius
sphKR0 = 5
# reference number of particles per kernel radius
nPPK0 = 20
# variation of nppK exponent
aPPK = -1

# if splitOption=0
# threshold for splitting particles, split if: mPart > massPerPart x thresholdMassSplit
thresholdMassSplit = 5

#+++++++++++++Mesh and interpolation
# remesh the input DEM
# expected mesh size [m]
meshCellSize = 5



#+++++++++++++Flow model parameters+++++++++
# subgridMixingFactor
subgridMixingFactor = 10.
# acceleration of gravity [m/s²]
gravAcc = 9.81
velMagMin = 1.0e-6
depMin = 1.0e-6
# curvature acceleration coefficient
# take curvature term into account in the gravity acceleration term
# 0 if deactivated, 1 if activated
curvAcceleration = 0

#++++++++++++Friction model
# add the friction using an explicit formulation (1)
# 0 use an implicit method
explicitFriction = 1
# friction type (samosAT, Coulomb, Voellmy)
frictModel = Coulomb
#+++++++++++++General Friction parameters
# tan of bed friction angle used for: samosAT, Coulomb, Voellmy
mu = 0.5
#0.466307658


[TRACKPARTICLES]
# if particles should be tracked - don't forget to specify the "tSteps" you want to
# save further up (for example tStep = 0:1 will lead to tracking patiles every 1 second)
trackParticles = False
# centerTrackPartPoint of the location of the particles to track (x|y coordinates)
centerTrackPartPoint = 2933|-4010
# radius around centerTrackPartPoint (in meters)
radius = 5
# particle properties to be tracked (the following properties are always
# tracked: x, y, z, ux, uy, uz, but more can be added in particleProperties)
particleProperties =

[VISUALISATION]
# if particle properties shall be exported to csv files - requires to save particles in OUTPUTS
writePartToCSV = False
# particle properties to be saved to csv (options: ux, uy, uz, velocityMagnitude,..)
particleProperties = velocityMagnitude|m


[INPUT]
# specify a particular release area scenario, provide name of shapefile with or without extension .shp (optional)
releaseScenario =


[REPORT]
# which result parameters shall be included as plots in report,  - separated by |
plotFields = ppr|pfd|pfv
# units for output variables
unitppr = kPa
unitpfd = m
unitpfv = ms-1
