[GENERAL]
# flag to generate usable DFA results prior to path generation. Warning: generating results like this will delete any
# previously generated results from the com1DFA Output directory
# set to 'True' to always run DFA simulations
# set to 'False' to load existing simulation results from the "Outputs" folder
runDFAModule = True

[PATH]
# True to get the path from particles, False to get the path from fields (FT and FM)
pathFromPart = False

# If path from fields, True to add velocity info (needs FV saved in addition to FT and FM)
addVelocityInfo = False

# the path extracted from the DFA simulation is re-sampled
# re-sampling step size is defined resampleDistance = nCellsResample x cellSize)
nCellsResample = 10

# extension method at the top
# option 0: take the highest particle in the release
# option 1: find the point that will lead to the longest runout
extTopOption = 1

# when extending the path at the bottom, extend path in
# the direction extracted form the last points of the path
# (all points at a distance nCellsMinExtend x cellSize < distance < nCellsMaxExtend x cellSize
# from the end)
nCellsMinExtend = 1
nCellsMaxExtend = 20
# this value needs to be chosen in accordance with nCellsResample (if nCellsMaxExtend < nCellsResample no points
# might be found for the path extension process)

# for the extrapolation at the bottom, add factBottomExt * sMax to the path (and then check if the extension
# is on the DEM, if not iterate by dichotomy until we find a point on the topography or reach a maximum
# iteration number (integer, in this case we pick the last point found inside the dem)
# or precision (nBottomExtPrecision * cellSize))
factBottomExt = 0.3
maxIterationExtBot = 10
nBottomExtPrecision = 10

# split point finding
# first fit a parabola on the non extended path. Start and end point match the profile
# the 3rd constraint is given by:
# fitOption == 0: minimize distance between parabola and profile
# fitOption == 1: match slope of parabola and profile at the end point
fitOption = 0
# if fitOption == 1, use the points at distance < nCellsSlope x cellSize to estimate the end slope
nCellsSlope = 5

# slope angle on parabolic fit for split point
slopeSplitPoint = 20

# threshold distance [m]. When looking for the split point make sure at least
# dsMin meters after the split point also have an angle bellow slopeSplitPoint
dsMin = 20

[com1DFA_com1DFA_override]
# use default com1DFA config as base configuration (True)
# if False and local is available use local
defaultConfig = True
# and override following parameters

# saving time step, i.e. time in seconds (first and last time step are always saved). Multiple intermediate time steps
# are required in order to compute the path
tSteps = 0:5

# resType (ppr, pft, pfv, pta, FT, FV, P, FM, Vx, Vy, Vz, TA, particles). pta|FT|FM is the minimum for generating the
# path from fields, pta|particles is the minimum for generating the path from particles (see pathFromPart parameter)
resType = pta|FT|FM

# list of simulations that shall be performed (null, ent, res, entres, available (use all available input data))
simTypeList = null

# simulation time step [s]. a larger time step is applied here to reduce processing time
dt = 1