### Config File - This file contains the main settings for the particle analysis plots
## Copy to  local_outParticleAnalysis.ini and set you parameters
# This file is part of Avaframe.


[GENERAL]
# if needed to run com1DA sim set to true, if False use data saved in Outputs
# if True com1DFA_override section is used
runCom1DFA = True
# include measured particles data
includeMeasurements = False
# result variables used from simulation results to then create plots
resTypePlots = ppr|pft|pfv


[com1DFA_override]
# use default com1DFA config as base configuration (True) and override following parameters
# if False and local is available use local
defaultConfig = True
#+++++++++++++ Output++++++++++++
# desired result Parameters (ppr, pft, pfv, pta, FT, FV, P, FM, Vx, Vy, Vz, TA, particles) - separated by |
resType = ppr|pft|pfv|particles|FT|FV|FM
# saving time step, i.e.  time in seconds (first and last time step are always saved)
# option 1: give an interval with start:interval in seconds (tStep = 0:5 - this will save desired results every 5 seconds for the full simulation)
# option 2: explicitly list all desired time steps (closest to actual computational time step) separated by | (example tSteps = 1|50.2|100)
# NOTE: initial and last time step are always saved!
tSteps = 0:1
# if particles should be tracked - don't forget to specify the "tSteps" you want to
# save further up (for example tStep = 0:1 will lead to tracking patiles every 1 second)
trackParticles = True
# centerTrackPartPoint of the location of the particles to track (x|y coordinates)
centerTrackPartPoint = 174|760
# radius around centerTrackPartPoint (in meters)
radius = 5
# particle properties to be tracked (the following properties are always
# tracked: x, y, z, ux, uy, uz, but more can be added in particleProperties)
particleProperties = trajectoryLengthXY|trajectoryLengthXYZ|uAcc


[ana3AIMEC_override]
# use default ana3AIMEC config as base configuration (True) and override following parameters
# if False and local is available use local
defaultConfig = True
# define a runout area based on an angle of the thalweg profile (if True: requires splitPoint in avaName/Inputs/POINTS as shpFile)
defineRunoutArea = False
# data result type for runout analysis (ppr, pft, pfv)
runoutResType = pfv
# contour levels value for the difference plot (depends on the runoutResType chosen)
# use | delimiter (for ppr 1|3|5|10, for pft 0.1|0.25|0.5|0.75|1)
contourLevels = 1|5|10|50
# max of runoutResType difference for contour lines plus capped difference in runoutResType plot (for example 1 (pft), 5 (ppr))
diffLim = 5
# threshold distance [m]. When looking for the beta point make sure at least
# dsMin meters after the beta point also have an angle bellow 10°
dsMin = 10
# computational module that was used to produce avalanche simulations (to locate peakFiles)
anaMod = com1DFA
# Mass analysis
flagMass = False
# threshold of velocity to compute alpha angle
velocityThreshold = 1.


[distanceTimeAnalysis_override]
# use default distanceTimeAnalysis config as base configuration (True) and override following parameters
# if False and local is available use local
defaultConfig = True
# use the maximum rangeTimeResType or the mean rangeTimeResType (max or mean) values computed for crossprofiles along path
maxOrMean = max
# angle for the start of the run-out zone
startOfRunoutAreaAngle = 60
# threshold distance [m]. When looking for the beta point make sure at least
# dsMin meters after the beta point also have an angle bellow 10°
dsMin = 10
# origin of s coordinate - if True set to start of thalweg, if False use with respect to startOfRunoutAreaAngle point
originStart = True
