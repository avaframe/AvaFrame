# Deploy to pypi for all plattforms 

name: releaseWithManyLinux

on: 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Build and deploy manylinux wheel
  Linux-build:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy
          pip install -e .
      - name: Compile cython code
        run: |
          if [ -f avaframe/com1DFA/DFAfunctionsCython.pyx ]; then python setup.py build_ext --inplace; fi
      - name: build manylinux wheels
        uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2014_x86_64
        with:
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
          build-requirements: 'cython numpy'
      - name: Publish wheels to PyPI
        run: |
          pip install twine
          twine upload dist/*-manylinux*.whl
        continue-on-error: true

  # deploy source distribution
  Source-dist:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy
          pip install -e .
      - name: create source distribution
        run: python setup.py sdist
      - name: upload source distribution
        run: |
          pip install twine
          twine upload dist/*
        continue-on-error: true

  # Build and deploy wheels for macos and windows using setup-python action.
  Matrix-build:
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: build wheel
        run: |
          pip install wheel
          pip install numpy
          python setup.py bdist_wheel
      - name: upload wheel
        run: |
          pip install twine
          twine upload dist/*
        continue-on-error: true
